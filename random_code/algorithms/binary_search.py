"""Функция получает список и значение, возвращает позицию значения.
Для успешной работы функции список должен быть отсортирован."""


def binary_search(lst, item):
    # Если список неотсортирован, то сортируем.
    lst = sorted(lst)
    # low и high - границы той части списка, в которой выполняется поиск
    low = 0
    high = len(lst) - 1

    # Пока в списке больше одного элемента продолжать поиск.
    while low <= high:
        # Определяем средний индекс списка.
        mid = (low + high) // 2
        # Берем значение серединного элемента.
        guess = lst[mid]
        # Проверяем соответствует ли значение среднего элемента
        # загаданному значению. Если да -> вернуть значение среднего элемента.
        if guess == item:
            return mid + 1
        # Если нет, то переходим в левую или правую половину соответственно.
        if guess > item:
            high = mid - 1
        else:
            low = mid + 1

    return True


my_list = [1, 2, 3, 3, 11, 22, 32, 45, 54, 55, 55, 66, 99, 332, 535, 3535]

print(binary_search(my_list, 535))
print(binary_search(my_list, 66))

